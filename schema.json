{
  "title": "Dip Configuration Schema",
  "description": "Schema for the dip.yml configuration file",
  "type": "object",
  "properties": {
    "$schema": {
      "type": "string",
      "description": "The URI of the JSON Schema to validate against"
    },
    "version": {
      "type": "string",
      "description": "Specifies the minimum required version of Dip",
      "examples": ["7", "8.0", "8.1.0"]
    },
    "compose": {
      "type": "object",
      "description": "Contains Docker Compose configuration",
      "properties": {
        "files": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Array of strings representing paths to Docker Compose files",
          "examples": ["docker-compose.yml", "docker-compose.override.yml"]
        },
        "project_name": {
          "type": "string",
          "description": "Specifies the project name for Docker Compose",
          "examples": ["my_project", "web_app", "backend_service"]
        },
        "command": {
          "type": "string",
          "description": "Specifies an alternative Docker Compose command",
          "examples": ["docker-compose", "docker compose"]
        },
        "compose_method": {
          "type": "string",
          "description": "Specifies the Docker Compose method to use",
          "examples": ["up", "run"]
        }
      },
      "required": ["files"]
    },
    "interaction": {
      "type": "object",
      "description": "Defines the commands and their configurations",
      "patternProperties": {
        "^[a-zA-Z0-9_]+$": {
          "$ref": "#/definitions/interactionCommand"
        }
      },
      "minProperties": 1
    },
    "provision": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Lists the commands to be executed for provisioning"
    },
    "environment": {
      "type": "object",
      "description": "Defines environment variables for the configuration",
      "patternProperties": {
        "^[a-zA-Z_][a-zA-Z0-9_]*$": {
          "type": "string"
        }
      }
    },
    "kubectl": {
      "type": "object",
      "description": "Contains Kubernetes configuration",
      "properties": {
        "namespace": {
          "type": "string",
          "description": "Specifies the Kubernetes namespace to use"
        }
      }
    },
    "modules": {
      "type": "array",
      "items": {
        "type": "string",
        "description": "Path to module configuration file",
        "examples": ["dip.production.yml", "dip.staging.yml", "dip.local.yml"]
      }
    },
    "infra": {
      "type": "object",
      "description": "Contains infrastructure services configuration",
      "patternProperties": {
        "^[a-zA-Z0-9_]+$": {
          "type": "object",
          "properties": {
            "git": {
              "type": "string",
              "format": "uri",
              "description": "Git repository URL for infrastructure component",
              "examples": ["https://github.com/mycompany/redis-config.git"]
            },
            "ref": {
              "type": "string",
              "description": "Specifies the Git reference (branch, tag, or commit) to use"
            },
            "path": {
              "type": "string",
              "description": "Local path to infrastructure component",
              "examples": ["./infra/elasticsearch"]
            }
          },
          "oneOf": [
            { "required": ["git", "ref"] },
            { "required": ["path"] }
          ]
        }
      }
    }
  },
  "required": ["version", "compose", "interaction"],
  "additionalProperties": false,
  "definitions": {
    "interactionCommand": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Describes the command"
        },
        "service": {
          "type": "string",
          "description": "Specifies the service associated with the command",
          "examples": ["app", "db", "web", "redis"]
        },
        "command": {
          "type": "string",
          "description": "Represents the command to be executed",
          "examples": ["/bin/bash", "./bin/console", "bundle", "bundle exec rspec"]
        },
        "default_args": {
          "type": "string",
          "description": "Default arguments for the command",
          "examples": ["server -p 3000 -b 0.0.0.0"]
        },
        "environment": {
          "patternProperties": {
            "^[A-Z][A-Z0-9_]*$": {
              "type": "string",
              "examples": ["true", "development", "test"]
            }
          }
        },
        "compose": {
          "type": "object",
          "description": "Allows specifying Docker Compose options",
          "properties": {
            "method": {
              "type": "string",
              "description": "Specifies the Docker Compose method (e.g., up, run)",
              "examples": ["up", "run"]
            },
            "run_options": {
              "type": "array",
              "items": {
                "type": "string",
                "examples": ["service-ports", "rm"]
              }
            },
            "profiles": {
              "type": "array",
              "items": {
                "type": "string",
                "examples": ["web", "development", "test", "frontend"]
              }
            }
          }
        },
        "shell": {
          "type": "boolean",
          "description": "Enables or disables shell interpolation",
          "examples": [true, false]
        },
        "entrypoint": {
          "type": "string",
          "description": "Specifies the command entrypoint",
          "examples": ["/env-entrypoint"]
        },
        "runner": {
          "type": "string",
          "description": "Specifies the runner (e.g., docker_compose, kubectl)",
          "examples": ["docker_compose", "kubectl"]
        },
        "subcommands": {
          "type": "object",
          "description": "Contains subcommands with the same structure as main commands",
          "patternProperties": {
            "^[a-zA-Z0-9_]+$": {
              "$ref": "#/definitions/interactionCommand"
            }
          }
        }
      },
      "additionalProperties": false,
      "anyOf": [
        { "required": ["command"] },
        { "required": ["subcommands"] }
      ]
    }
  }
}
